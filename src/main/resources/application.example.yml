spring:
  datasource:
    url: jdbc:mysql://주소 ex)localhost:3306/스키마?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Seoul
    username: RDB 아이디
    password: RDB 비밀번호
  jpa:
    show-sql: true
    hibernate:
      #      ddl-auto: validate
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        search:
          default:
            derectory_provider: filesystem
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 구글 클라이언트 ID
            clientSecret: 구글 클라이언트 secret
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 페이스북 클라이언트 ID
            clientSecret: 페이스북 클라이언트 secret
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
              - email
              - public_profile
          github:
            clientId: 깃허브 클라이언트 ID
            clientSecret: 깃허브 클라이언트 secret
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
          naver:
            clientId: 네이버 클라이언트 ID
            clientSecret: 네이버 클라이언트 secret
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorizationGrantType: authorization_code
            scope:
              - name
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: 카카오 클라이언트 ID
            #clientSecret: 카카오 클라이언트 secret(설정해놨으면 사용)
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorizationGrantType: authorization_code
            scope:
              - account_email
              - profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id
#cloud:
#  aws:
#    credentials:
#      accessKey: IAM_ACCESS_KEY
#      secretKey: IAM_SECRET_KEY
#      instanceProfile: true
#    s3:
#      bucket: BUCKET_NAME
#    region:
#      static: REGION
#    stack:
#      auto: false
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000  #10일
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect